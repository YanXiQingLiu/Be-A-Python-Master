4.1 手动遍历迭代器
问题
你想遍历一个可迭代对象中的所有元素，但是却不想使用for循环。

4.2 代理迭代
问题
你构建了一个自定义容器对象，里面包含有列表、元组或其他可迭代对象。
你想直接在你的这个新容器对象上执行迭代操作。

4.3 使用生成器创建新的迭代模式
问题
你想实现一个自定义迭代模式，跟普通的内置函数比如 range() , reversed() 不一样。

4.4 实现迭代器协议
问题
你想构建一个能支持迭代操作的自定义对象，并希望找到一个能实现迭代协议的简单方法。

4.5 反向迭代
问题
你想反方向迭代一个序列

4.6 带有外部状态的生成器函数
问题
你想定义一个生成器函数，但是它会调用某个你想暴露给用户使用的外部状态值。

4.7 迭代器切片
问题
你想得到一个由迭代器生成的切片对象，但是标准切片操作并不能做到。

4.8 跳过可迭代对象的开始部分
问题
你想遍历一个可迭代对象，但是它开始的某些元素你并不感兴趣，想跳过它们。

4.9 排列组合的迭代
问题
你想迭代遍历一个集合中元素的所有可能的排列或组合

4.10 序列上索引值迭代
问题
你想在迭代一个序列的同时跟踪正在被处理的元素索引。

4.11 同时迭代多个序列
问题
你想同时迭代多个序列，每次分别从一个序列中取一个元素。

4.12 不同集合上元素的迭代
问题
你想在多个对象执行相同的操作，但是这些对象在不同的容器中，你希望代码在不失可读性的情况下避免写重复的循环。

4.13 创建数据处理管道
问题
你想以数据管道(类似Unix管道)的方式迭代处理数据。 
比如，你有个大量的数据需要处理，但是不能将它们一次性放入内存中。

4.14 展开嵌套的序列
问题
你想将一个多层嵌套的序列展开成一个单层列表

4.15 顺序迭代合并后的排序迭代对象
问题
你有一系列排序序列，想将它们合并后得到一个排序序列并在上面迭代遍历。

4.16 迭代器代替while无限循环
问题
你在代码中使用 while 循环来迭代处理数据，因为它需要调用某个函数或者和一般迭代模式不同的测试条件。
能不能用迭代器来重写这个循环呢？
