生成器是编写基于处理管道、流或数据流程序的一种机器强大的方式。

生成器的微妙之处在于，它经常和其他可迭代的对象（如列表或文件）混合在一起。特别是在编写如 for item in s 这样的语句时，
    s 可以代表一个列表、文件的各行、生成器函数的结果，或者支持迭代的其他任何对象。能够在 s 中插入不通对象，为创建可扩展的程序提供了一个强大的工具。

定义函数：
>>> def countdown(n):
...     print('Counting down!')
...     while n>0:
...         yield n
...         n -= 1
...

通过__next__手动连续调用：
>>> c.__next__()
Counting down!
6
>>> c.__next__()
5
>>> c.__next__()
4
>>> c.__next__()
3
>>> c.__next__()
2
>>> c.__next__()
1
>>> c.__next__()
通过for循环语句连续调用：
>>> for i in countdown(10):
...     print(i)
...
Counting down!
10
9
8
7
6
5
4
3
2
1
