面向对象介绍
        现实规则：
            世界万物，皆可分类。
            世界万物，皆为对象。
            只要是对象，就肯定属于某种品类。
            只要是对象，就肯定有属性（eg.功能、名称）。
            
                      你是上帝（挂掉，自个生）
                      地球
                      山川，河流，大海，森林，云彩
                      飞禽（飞，吃虫子，下蛋）
                            布谷鸟： （飞，吃虫子，下蛋）唱歌
                            乌鸦  ：（飞，吃虫子，下蛋）
                            几百种鸟
                      走兽
                            狮子  百兽之王
                            老虎  森林之王
                      臭鱼烂虾
                      人（思考，劳动，说好，吃喝拉撒睡）
     
特性
  class 类：
              一个类即是对一类拥有相同属性的对象的抽象、蓝图、原型。
              在类中定义了这些对象的都具备的属性（variables(data)）、共同的方法。
              电子类（通讯属性、通电属性、型号属性、品牌）
  object 对象：
              一个对象即是一个类的实例化后实例，一个类必须经过实例化后方可在程序中
              调用，一个类可以实例化多个对象（鸟模板，各种不同颜色的鸟），每个对象亦可以由不同的属性，
              就像人类是指所有人，每个人是指具体的对象，人与人之间有共性，亦有不同。
  Encapluslation封装：
              在类中对数据的赋值、内部调用对外部用户是透明的，这使类变成了一个胶囊或容器，
              里面半含着类的数据和方法。eg.人、内脏、骨骼
  Inheritance继承：
              一个类可以派生出子类，在这个父类里定义的属性、方法自动被子类继承。
  Ploymorphism多态：
                态是面向对象的重要特性，即“一个接口，多种实现”，指一个基类中派生出了不同的子类，
              而且每个子类在继承了同样的方法名的同时又对父类的方法做了不同的实现，
              这就是同一事物表现出的多种形态。
                eg.对不同类的对象发出相同的消息将会有不同的行为。你的老板让所有员工在九点钟开始工作，
              他只要在九点的时候说：“开始工作”即可，而不需要对销售人员说：“开始销售工作”，
              对技术人员说：“开始技术工作”，因为“员工”是一个抽象的时区，只要是员工就可以开始工作，他知道这一点就行了。
              至于每个员工，当然会各司其职，做各自的工作。
    语法
        属性
        方法
        构造函数
        析构函数
        私有方法，私有属性
    
    类变量
    实例变量
        
编程范式（主要三种）：
        面向对象编程（OOP）：利用“类”和“对象”来创建各种模型来实现对真实世界的描述。
        面向过程变成（Procedural Programming）：
        函数是编程    
        
class类：
object对象：

