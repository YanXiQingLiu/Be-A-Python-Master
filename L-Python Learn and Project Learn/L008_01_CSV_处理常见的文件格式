#CSV：逗号分隔的数值格式已经出现多年，即逗号是最常用的分隔符。CSV经常被应用于使用制表符或管道符(|)或者
      甚至几乎任何其他类型的符号作为分隔符的文件。
      
#标准csv模块的一个大问题是它不能处理Unicode输入。
  #如果需要处理包含Unicode字符的文件，你应该试试第三方模块:比如unicodecsv      

------------------------------------------------------------------------------------------
csv模块提供了两种机制来读取CSV文件：
        1.最简单的机制只是读取每行到一个元组中，然后程序员需要记录元组中的每个位置代表什么意思。
        2.读取数据到一个字典中，通常使用文件的第一行作为字典的键。
        
        说明：模块默认使用Microsoft Excel的csv格式
------------------------------------------------------------------------------------------
#reader对象并不仅限于文件。它也可以把一个字符串列表作为它的输入（见下文实操）。如果使用subprocess在
 #stdout上产生csv格式数据，这是一个强大的工具。

机制一：


#测试文件来源--Chapter2
http://www.wrox.com/WileyCDA/WroxTitle/Python-Projects.productCd-111890866X,descCd-DOWNLOAD.html

实际操作：
C:\Users\Administrator>python "I:\\老男孩项目\\S13Day1\\day2\\22csv.py"
['ItemID', 'Name', 'Description', 'Owner', 'Borrower', 'DateLent', 'DateReturned']
['1', 'LawnMower', 'Small Hover mower', 'Fred', 'Joe', '4/1/2012', '4/26/2012']
['2', 'LawnMower', 'Ride-on mower', 'Mike', 'Anne', '9/5/2012', '1/5/2013']
['3', 'Bike', 'BMX bike', 'Joe', 'Rob', '7/3/2013', '7/22/2013']
['4', 'Drill', 'Heavy duty hammer', 'Rob', 'Fred', '11/19/2013', '11/29/2013']
['5', 'Scarifier', 'Quality, stainless steel', 'Anne', 'Mike', '12/5/2013', '']
['6', 'Sprinkler', 'Cheap but effective', 'Fred', '', '', '']


22csv.py文件内容       
-----------------------------------------------------------------------------       
#!/usr/bin/env python
# -*- coding:utf-8 -*-
# Author：Xuhong Wen
import csv
with open('C:\\Python36\\ToolhireData\\toolhire.csv') as th:
    toolreader = csv.reader(th)
    li=list(toolreader)
    for l in li:
        print(l)       
--------------------------------------------------------------------------------        
        
        
        
 机制二：       
#返回的是有序字典（人工整理后的格式）：
python "I:\\老男孩项目\S13Day1\day2\22csv-机制2字典.py"    #绝对路径一定要用双引号
or
C:\Users\Administrator>python 22csv-机制2字典.py
OrderedDict([
            ('ItemID', '1'), 
            ('Name', 'LawnMower'),
            ('Description', 'Small Hover mower'),
            ('Owner','Fred'),
            ('Borrower', 'Joe'), 
            ('DateLent', '4/1/2012'),
            ('DateReturned', '4/26/2012')])
OrderedDict([
            ('ItemID', '2'), 
            ('Name', 'LawnMower'),
            ('Description', 'Ride-on mower'), 
            ('Owner', 'Mike'), 
            ('Borrower', 'Anne'), 
            ('DateLent', '9/5/2012'), 
            ('DateReturned', '1/5/2013')
            ])
OrderedDict([
            ('ItemID', '3'), 
            ('Name', 'Bike'), 
            ('Description', 'BMX bike'),
            ('Owner', 'Joe'),
            ('Borrower', 'Rob'), 
            ('DateLent', '7/3/2013'),
            ('DateReturned', '7/22/2013')
            ])
OrderedDict([
            ('ItemID', '4'), 
            ('Name', 'Drill'), 
            ('Description', 'Heavy duty hammer'),
            ('Owner', 'Rob'), 
            ('Borrower', 'Fred'),
            ('DateLent', '11/19/2013'),
            ('DateReturned', '11/29/2013')
            ])
OrderedDict([
            ('ItemID', '5'), 
            ('Name', 'Scarifier'),
            ('Description', 'Quality, stainless steel'), 
            ('Owner', 'Anne'), 
            ('Borrower', 'Mike'), 
            ('DateLent', '12/5/2013'),
            ('DateReturned', '')
            ])
OrderedDict([
            ('ItemID', '6'), 
            ('Name', 'Sprinkler'), 
            ('Description', 'Cheap but effective'),
            ('Owner', 'Fred'), 
            ('Borrower', ''), 
            ('DateLent', ''), 
            ('DateReturned', '')
            ])        

22csv-机制2字典.py文件内容       
-----------------------------------------------------------------------------    
#!/usr/bin/env python
# -*- coding:utf-8 -*-
# Author：Xuhong Wen
import csv
with open('C:\\Python36\\ToolhireData\\toolhire.csv') as th:
    rdr = csv.DictReader(th)
    for item in rdr:
        print(item)      
22csv.py文件内容       
-----------------------------------------------------------------------------          
      
      
      
   
   
   
   
   
