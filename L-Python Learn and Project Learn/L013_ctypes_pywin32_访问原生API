  一些应用或操作系统函数不容易通过常规Python代码访问，因为没有可以从 Python 中调用的 Python API 或者暴露出来的
用户友好的操作。
  ctypes 模块可以提供一个可选的访问方法。这种方法向 Python 提供了可用于构建应用的C代码库，在 windows 中这些库
通常是一组DLL文件。而在 UNIX 中，它们是一组共享对象库。 
ctypes 让你讲这些库加载到你的应用中，并直接从 Python 中调用它们的函数。
  注意：当使用 ctpyes 时，你就把 Python 解析器的安全网抛在一边了。记住，你在操作原始操作系统库时，有时会直接访问
内存地址。这些库也直接操作原始文件系统和输入/输出流，所以它们可能不会展示你使用 IDE，比如 IDLE 或 Pythonwin
时所期待的结果。
  如果犯了错误，则可能会轻易导致 Python 解析器崩溃。 在极端情况下，甚至可能导致操作系统崩溃。这就是为什么在万不得已
的情况下你才使用 ctypes 和类似东西的原因。只有当其他方法都失败时，才去使用它。
         
  
