数据类型：数字、字符串、列表[]、元组()、字典{}、集合{}、文件
  具有不可变性的数据类型：数字、字符串、元组
  
要点：
    1.对象根据分类来共享操作；例如，字符串、列表和元组都共享诸如合并、长度和索引等序列操作。
    
    2.只有可变对象（列表、字典和集合）可以原处修改；我们不能原处修改数字、字符串或元组。
    
    3.文件导出唯一的方法，当处理文件的时候可变性并不真的适用于它们。
    
      它们的状态可能会修改，但是，这与Python的核心数据类型可变性限制不完全相同。
      
    4.《表：对象分类》中的"数字"包含了所有数字类型：整数（与Python 2.6的整数有区别，3.0取消了长整数）
      浮点数、复数、小数和分数。
      
    5.《表：对象分类》中的字符串包括str，以及Python 3.0中的bytes和Python 2.6中的unicode；
      Python 3.0中的bytearray字符串类型是可变的。
      
    6.集合类似于一个无值的字典的键，但是，它们不能映射为值，并且没有顺序；因此，集合不是一个映射类型
      或者一个序列类型，frozenset是集合的一个不可变的版本。
    
    7.除了类型分类操作，《表：对象分类》中的Python 2.6和Python 3.0的所有类型都有可调用的方法，
      这些方法通常特定于他们的类型。
  
  --------------------------------------------------------------------------------------
                                    表：对象分类
  --------------------------------------------------------------------------------------
               对象类型                 分类                 是否可变
            -------------------------------------------------------------------
                数字                  数值                     否
                字符串                序列                     否
                列表                  序列                     是
                字典                  对应(映射)               是
                元组                  序列                     否
                文件                  扩展                     N/A
                Sets                  集合                     是
                frozenset             集合                     否
                bytearray(3.0)        序列                     是 
            ------------------------------------------------------------------- 
  

-------------------------------------------------------------------------------------------
  列表切片：
        name = ['Hong','Xu','Wen','Jack',1,2,3,4,99,98,96,95]
        name = [::2]    #2为步长  列表切片
        
        name.insert(2,'ChaRu')    #指定位置插入元素
        name.append('LastChaRu')    #末尾加上元素
        name.sort    #排序
        name.reverse()    #反转
        name.extend(name2)   #name列表中合并name2列表
        del name2  删除变量name2
        name.remove(1);name.remove(2)     #移除指定元素名称的元素
        print(name[:2],name[2])    #根据下标切片[]，切片规则：虎头蛇尾，顾首不顾尾，只能正着取
        print(name[:-1],name[-2])
        print(name[2:7],name[-8:-4],name[-5:],'正取（左到右）顾首不顾尾，反取（右到左）顾尾不顾首')
       
        不断切分示例：
        print(name[:6])
        print(name[:6][1:3])
        print(name[:6][1:3][1][2])    #不断切分示例

-------------------------------------------------------------------------------------------
集合：
        常用语  集合的无序属性，多用于‘去重’
        增：t.add('x')#增加一项
        改：s.update([10,90,77]) #在a中添加参数
        删除：
              t.remove('H')   #指定删除集合中的特定元素，可指定。
              t.pop()     #随机删除集合中的某一个元素，不能指定。
              t.dicard("")   #删除集合某一元素，但是不会返回报错。
        查：x in a #判断x是否是a的成员
           len（s）查看结合s的长度
           
        
        print(list1.intersection(list2))#交集   &
        print(list1.union(list2))#并集   |
        print(list1.difference(list2))#差集  in list1 but not in list2   list1 - list2
        print('---',list1.symmetric_difference(list2))#对称差集  把两个互相都没有的取出来。  list1 ^ list2
        print('--^--',list1^list2)  #对称差集  把两个互相都没有的取出来。  list1 ^ list2
        print(list1.issubset(list2))#子集  返回bool
        print(list1.issuperset(list2))#父集  返回bool
        list1.isdisjoint(list2)#两个集合如果有交集则返回true
        
        
-------------------------------------------------------------------------------------------        
模块：
        sys 
        sys.path
        sys.argv[1 ,2])    #当前脚本的相对路径

        os   
        os.popen（'dir'）.read()
        os.mkdir('')

-------------------------------------------------------------------------------------------
二进制b、八进制O0、十六进制X0 ：
        
        python3里面所有的文件传输，必须使用二进制的方式传输。
        视频、音频必须是二进制文件。
        文本可以是Unicode文件
        
        decode解码:    b'\xe2\x82\xac20'.decode('utf-8') 
        encode编码:    '%20'.encode('utf-8')
        
-------------------------------------------------------------------------------------------               
函数：
    分类：标准函数、生成器函数、lambda函数
    Python函数永远会返回一个值。默认是 None 。但可由 return 定义。
    参数：普通参数、默认参数、指定参数。默认参数必须放在所有普通参数和指定参数之后。

-------------------------------------------------------------------------------------------
类：
    python类支持多继承、操作符重载、常用的封装机制和消息传递。
    （但是不支持方法重载、Python类不直接实现数据隐藏）。
    python支持类方法、类数据、属性(properties)和插槽(slots)的概念。
    类充当定义在"类内部本身的方法和数据"的命名空间。
    
      类的构造函数：  __new__()
      类的初始化函数：  __int__()
      析构函数机制：  __del__()

-------------------------------------------------------------------------------------------
对象：
    对象是类的实例。实例在创建之后可以添加自己的属性。



-------------------------------------------------------------------------------------------
模块：

-------------------------------------------------------------------------------------------
包：

-------------------------------------------------------------------------------------------
文件：
    注意：文件数据在脚本中一定是字符串，而写入方法不会自动地替换我们做任何向字符串格式转换的工作。
    *文件迭代器是最好的读取行的工具。
    
     常用函数：
        F = open('datafile.txt','rw')         #打开文件
        F.rstrip()                            #Remove end-of-line;删除换行符方法
        F.split(',')                          #字符串split方法，从逗号分隔符的地方将整行断开，得到子字符串列表

  实际操作：
    >>> F = open('datafiletest.txt','w')    # Create output file
    >>> X,Y,Z=43,44,45                      # Native Python objects
    >>> s='spam'                            # Must be strings to store in file
    >>> d = {'a':1,'b':2}
    >>> l = [1,2,3]
    >>> F.write(s+'\n')                     # Terminate lines with \n
    >>> F.write('%s,%s,%s\n'%(X,Y,Z))       # Convert numbers to strings
    9
    >>> F.write(str(l)+'$'+str(d)+'\n')     # Convert and separate with $
    27
    >>> F.close()                           #以上操作，先保存在缓存文件中，执行close()函数之后，才保存在文件中。
  
